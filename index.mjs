// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zeros@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ndarraylike2object@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-arraylike2object@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-zeros@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-vind2bind@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-maybe-broadcast-array@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-read-only@esm/index.mjs";var u=m;var p=function(r,e,t,a){var s,n,i,d,o,m,l,h,p,f,j,y,b,g,c,v;if(o=r.length,p=r.shape,f=e.shape,s=r.data,n=e.data,j=r.strides,y=e.strides,b=r.offset,g=e.offset,i=r.order,d=e.order,m=r.getter,l=e.setter,h=r.ref,0!==p.length)for(v=0;v<o;v++)c=u(p,j,b,i,v,"throw"),l(n,u(f,y,g,d,v,"throw"),t.call(a,m(s,c),v,h));else l(n,g,t.call(a,m(s,b),0,h))};var f=function(r,e,t,a){var s,n,i,d,o;for(s=r.data,n=e.data,i=r.getter,d=e.setter,o=0;o<s.length;o++)d(n,o,t.call(a,i(s,o),o,s))},j=e,y=t,b=a,g=s,c=n,v=i,w=d,x=o,k=p,E=f;var T=e,V=t,I=a,z=n,F=i,C=l,R=h,S=o,q=p,A=f;var B=function(r,e,t){var a;if(!b(e))throw new TypeError(x("invalid argument. Second argument must be a function. Value: `%s`.",e));if(y(r))return r=c(r),a=w(r.shape,{dtype:"generic",order:r.order}),k(r,c(a),e,t),a;if(j(r))return a=g(r.length),E(v(r),v(a),e,t),a;throw new TypeError(x("invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.",r))},D=function(r,e,t,a){var s,n;if(!I(t))throw new TypeError(S("invalid argument. Third argument must be a function. Value: `%s`.",t));if(V(r)){if(!V(e))throw new TypeError(S("invalid argument. If the input array is an ndarray, the output array must also be an ndarray. Value: `%s`.",e));if(R(e))throw new Error("invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.");return n=(e=z(e)).shape,(s=z(C(r,n))).ref=r,q(r=s,e,t,a),e.ref}if(T(r)){if(!T(e)||V(e))throw new TypeError(S("invalid argument. If the input array is an array-like object, the output array must also be an array-like object. Value: `%s`.",e));if(r.length!==e.length)throw new RangeError("invalid arguments. Input and output arrays must have the same length.");return A(F(r),F(e),t,a),e}throw new TypeError(S("invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.",r))};r(B,"assign",D);var G=B;export{D as assign,G as default};
//# sourceMappingURL=index.mjs.map
