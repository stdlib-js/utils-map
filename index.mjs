// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zeros@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ndarraylike2object@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-arraylike2object@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-zeros@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-vind2bind@v0.2.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-maybe-broadcast-array@v0.2.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-read-only@v0.2.0-esm/index.mjs";function u(r,e,t,s){var a,n,i,d,o,l,h,u,p,f,j,c,y,v,b,g;if(o=r.length,p=r.shape,f=e.shape,a=r.data,n=e.data,j=r.strides,c=e.strides,y=r.offset,v=e.offset,i=r.order,d=e.order,l=r.accessors[0],h=e.accessors[1],u=r.ref,0!==p.length)for(g=0;g<o;g++)b=m(p,j,y,i,g,"throw"),h(n,m(f,c,v,d,g,"throw"),t.call(s,l(a,b),g,u));else h(n,v,t.call(s,l(a,y),0,u))}function p(r,e,t,s){var a,n,i,d,o;for(a=r.data,n=e.data,i=r.accessors[0],d=e.accessors[1],o=0;o<a.length;o++)d(n,o,t.call(s,i(a,o),o,a))}function f(r,m,l){var h;if(!s(m))throw new TypeError(o("invalid argument. Second argument must be a function. Value: `%s`.",m));if(t(r))return r=n(r),h=d(r.shape,{dtype:"generic",order:r.order}),u(r,n(h),m,l),h;if(e(r))return h=a(r.length),p(i(r),i(h),m,l),h;throw new TypeError(o("invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.",r))}function j(r,a,d,m){var f,j;if(!s(d))throw new TypeError(o("invalid argument. Third argument must be a function. Value: `%s`.",d));if(t(r)){if(!t(a))throw new TypeError(o("invalid argument. If the input array is an ndarray, the output array must also be an ndarray. Value: `%s`.",a));if(h(a))throw new Error("invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.");return j=(a=n(a)).shape,(f=n(l(r,j))).ref=r,u(r=f,a,d,m),a.ref}if(e(r)){if(!e(a)||t(a))throw new TypeError(o("invalid argument. If the input array is an array-like object, the output array must also be an array-like object. Value: `%s`.",a));if(r.length!==a.length)throw new RangeError("invalid arguments. Input and output arrays must have the same length.");return p(i(r),i(a),d,m),a}throw new TypeError(o("invalid argument. First argument must be an array-like object or an ndarray. Value: `%s`.",r))}r(f,"assign",j);export{j as assign,f as default};
//# sourceMappingURL=index.mjs.map
